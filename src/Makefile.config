include $(SRCDIR)/../config
CFGDIR:=$(SRCDIR)/../cfg

GCC=$(GCCDIR)/bin/$(TARGET)-gcc
GPP=$(GCCDIR)/bin/$(TARGET)-g++
CC=$(GCC)
ifeq ($(CC),clang)
CXX=clang++
else
CXX=$(GPP)
endif

AS=$(GCCDIR)/bin/$(TARGET)-as
AR=$(GCCDIR)/bin/$(TARGET)-ar
LD=$(GCCDIR)/bin/$(TARGET)-ld
RANLIB=$(GCCDIR)/bin/$(TARGET)-ranlib
STRIP=$(GCCDIR)/bin/$(TARGET)-strip
GDB=$(GDBDIR)/bin/$(TARGET)-gdb -x $(CFGDIR)/gdbinit.cfg

IMAGE=/tmp/$$USER/KOS.img
ISO=/tmp/$$USER/KOS.iso
STAGE=stage

SHELL=/bin/bash

QEMU_DISP=-display sdl
#QEMU_DISP=-display vnc=:0 # vncviewer localhost

QEMU=$(TOOLSDIR)/bin/qemu-system-x86_64 -nodefconfig $(QEMU_DISP)\
	-m 768 -smp cores=2,threads=1,sockets=2 -debugcon file:/tmp/$$USER/KOS.dbg
#QEMU+=-d int,cpu_reset

QEMU_UNET=-device e1000,netdev=hn0 -netdev user,id=hn0,restrict=off,tftp=$(TFTPDIR),bootfile=pxelinux.0
QEMU_RNET=-device e1000,netdev=hn0 -netdev bridge,id=hn0,br=br0

QEMU_IMG=-boot order=d -cdrom $(ISO)
#QEMU_IMG=-boot order=c -hda $(IMAGE)
QEMU_PXE=-boot order=n

QEMU_SER=-serial file:/tmp/$$USER/KOS.serial
QEMU_GDB=-serial tcp::2345,server -serial file:/tmp/$$USER/KOS.serial

TMPFILES=/tmp/$$USER/KOS.dbg /tmp/$$USER/KOS.serial

KERNBASE=0xFFFFFFFF80000000

KERNFLAGS=-DKERNEL -DKERNBASE=$(KERNBASE)

CFGFLAGS=-D__KOS__ -m64 -include $(SRCDIR)/testoptions.h\
	-I$(SRCDIR) -I$(SRCDIR)/include

# workaround for gdb 7.6.x vs. gcc 4.8.y -> still needed?
DBGFLAGS=-gdwarf-2

OPTFLAGS=-O3 -fno-omit-frame-pointer

LANGFLAGS=-std=c++11 -fno-rtti -fno-exceptions

COMPFLAGS=-fno-common -Wall -Wextra\
  -Wno-unused-function -Wno-unused-parameter

CLANGFLAGS=-nostdinc++ -target $(TARGET)\
	 -Wno-unused-private-field -Wno-attributes\
	-I$(GCCDIR)/$(TARGET)/include\
	-I$(GCCDIR)/$(TARGET)/include/c++/$(GCCVER)\
	-I$(GCCDIR)/$(TARGET)/include/c++/$(GCCVER)/$(TARGET)\
	-I$(GCCDIR)/lib/gcc/$(TARGET)/$(GCCVER)/include

ifeq ($(CC),clang)
COMPFLAGS+=$(CLANGFLAGS)
else
COMPFLAGS+=-Wstack-usage=2048
endif

MACHFLAGS=-ffreestanding -mcmodel=kernel -m64\
	-mno-red-zone -mno-mmx -mno-avx -mno-avx2 -mno-3dnow\
	-mno-sse -mno-sse2 -mno-sse3 -mno-sse4 -mno-sse4a -mno-sse4.1 -mno-sse4.2
# -mpopcnt

TSTFLAGS=$(KERNFLAGS) $(CFGFLAGS) $(OPTFLAGS) $(DBGFLAGS) $(LANGFLAGS) $(COMPFLAGS)
PREFLAGS=$(KERNFLAGS) $(CFGFLAGS) $(OPTFLAGS)             $(LANGFLAGS) $(COMPFLAGS) $(MACHFLAGS)
CXXFLAGS=$(KERNFLAGS) $(CFGFLAGS) $(OPTFLAGS) $(DBGFLAGS) $(LANGFLAGS) $(COMPFLAGS) $(MACHFLAGS)
CFLAGS=  $(KERNFLAGS)             $(OPTFLAGS) $(DBGFLAGS)              $(COMPFLAGS) $(MACHFLAGS)

ASFLAGS=-g --64 --divide --defsym KERNBASE=$(KERNBASE)\
	-I$(SRCDIR) -I$(SRCDIR)/include

LDFLAGS=-nodefaultlibs -static
LDDEF=--defsym=KERNBASE=$(KERNBASE)
LIBS=-L$(GCCDIR)/$(TARGET)/lib -L$(GCCDIR)/lib/gcc/$(TARGET)/$(GCCVER)\
  -lstdc++ -lc -lgcc

MODULES=
MODULES+=LockTest
MODULES+=TcpTest
MODULES+=Experiments
MODULES+=InitProcess

CXXFLAGS+=-Iextern/lwip\
	-Iextern/lwip/lwip/src/include\
	-Iextern/lwip/lwip/src/include/ipv4

